stages:
  - build
  - deploy

variables:
  APP_DIR: "/var/www/api"
  SSH_USER: "ec2-user"
  STAGING_HOST: "staging-ec2-ip-address"
  PRODUCTION_HOST: "production-ec2-ip-address"
  SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY
  NODE_ENV: "production"

before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

build:
  stage: build
  image: node:18
  script:
    - cd api/
    - npm install
    - npm run build
  artifacts:
    paths:
      - api/

deploy_staging:
  stage: deploy
  only:
    - staging
  script:
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$STAGING_HOST "mkdir -p $APP_DIR"
    - scp -o StrictHostKeyChecking=no -r ./api/* $SSH_USER@$STAGING_HOST:$APP_DIR
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$STAGING_HOST "cd $APP_DIR && npm install --production && pm2 restart all"
  environment:
    name: staging
    url: http://staging-api-url

deploy_production:
  stage: deploy
  only:
    - main
  script:
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$PRODUCTION_HOST "mkdir -p $APP_DIR"
    - scp -o StrictHostKeyChecking=no -r ./api/* $SSH_USER@$PRODUCTION_HOST:$APP_DIR
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$PRODUCTION_HOST "cd $APP_DIR && npm install --production && pm2 restart all"
  environment:
    name: production
    url: http://production-api-url
